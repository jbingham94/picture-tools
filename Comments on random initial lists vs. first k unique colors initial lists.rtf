{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 In my testing, both methods worked similarly well in terms of end result, simply because the k-means produces fairly constant results.  Processing time, however, varied quite a bit.  For lists of length 8, random initial lists worked much faster.  I think this was because the upper left corner of the beach picture (from which we retrieve the unique initial pixels) was pretty black, and so the pixels were not as representative of the picture as a whole, and thus the centroid calculation took longer.  Though random lists are also usually pretty far off in terms of representing the picture's various colors, the colors are usually very different from each other, and thus have a head start on reaching the various colors in the picture (blues, yellows, etc -- very disparate).  If, somehow, the top left corner of the picture was representative of the colors in the picture as a whole, then I suppose that the first k unique colors method would work well.  But this is a very rare case.}